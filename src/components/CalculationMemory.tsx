import { Product, CalculationParams, CalculatedProduct } from "@/types/pricing";
import { calculatePricing } from "@/lib/pricing";

interface CalculationMemoryProps {
  products: Product[];
  params: CalculationParams;
}

export const CalculationMemory = ({ products, params }: CalculationMemoryProps) => {
  if (products.length === 0) return null;

  const firstProduct = products[0];
  const calculated: CalculatedProduct = calculatePricing(firstProduct, params);

  const formatCurrency = (value: number) => {
    return new Intl.NumberFormat("pt-BR", {
      style: "currency",
      currency: "BRL",
    }).format(value);
  };

  const formatPercent = (value: number) => {
    return `${value.toFixed(2)}%`;
  };

  const totalVariableExpenses = params.variableExpenses.reduce(
    (sum, exp) => sum + exp.percentage,
    0
  );

  const markupDivisor = 1 - (totalVariableExpenses + params.simplesNacional + params.profitMargin) / 100;

  return (
    <div className="space-y-6">
      <div>
        <h3 className="text-lg font-semibold mb-4">Mem√≥ria de C√°lculo Detalhada</h3>
        <p className="text-sm text-muted-foreground mb-4">
          Exemplo: {firstProduct.name} (C√≥d. {firstProduct.code})
        </p>
      </div>

      <div className="space-y-4 rounded-lg bg-muted/30 p-6 font-mono text-sm">
        <div>
          <p className="font-semibold mb-2">1. Cr√©ditos de Tributos (Compra)</p>
          <p className="ml-4">
            ‚Ä¢ Cr√©dito CBS (PIS + COFINS): {formatCurrency(firstProduct.pisCredit)} + {formatCurrency(firstProduct.cofinsCredit)} = {formatCurrency(calculated.cbsCredit)}
          </p>
          <p className="ml-4">
            ‚Ä¢ Cr√©dito IBS (17,5% do custo): {formatCurrency(firstProduct.cost)} √ó 17,5% = {formatCurrency(calculated.ibsCredit)}
          </p>
          <p className="ml-4 mt-2 font-semibold">
            Total de Cr√©ditos: {formatCurrency(calculated.cbsCredit + calculated.ibsCredit)}
          </p>
        </div>

        <div>
          <p className="font-semibold mb-2">2. Custo Efetivo</p>
          <p className="ml-4">
            Custo de Compra - Cr√©ditos Totais
          </p>
          <p className="ml-4">
            {formatCurrency(firstProduct.cost)} - {formatCurrency(calculated.cbsCredit + calculated.ibsCredit)} = {formatCurrency(calculated.effectiveCost)}
          </p>
        </div>

        <div>
          <p className="font-semibold mb-2">3. Markup Divisor</p>
          <p className="ml-4">
            1 - (Despesas Vari√°veis% + Simples Nacional% + Lucro%)
          </p>
          <p className="ml-4">
            1 - ({formatPercent(totalVariableExpenses)} + {formatPercent(params.simplesNacional)} + {formatPercent(params.profitMargin)})
          </p>
          <p className="ml-4 font-semibold">
            = {markupDivisor.toFixed(4)}
          </p>
        </div>

        <div>
          <p className="font-semibold mb-2">4. Pre√ßo de Venda Sugerido</p>
          <p className="ml-4">
            Custo Efetivo √∑ Markup Divisor
          </p>
          <p className="ml-4">
            {formatCurrency(calculated.effectiveCost)} √∑ {markupDivisor.toFixed(4)} = {formatCurrency(calculated.sellingPrice)}
          </p>
        </div>

        <div>
          <p className="font-semibold mb-2">5. D√©bitos de Tributos (Venda)</p>
          <p className="ml-4">
            ‚Ä¢ D√©bito CBS (8,8% do pre√ßo): {formatCurrency(calculated.sellingPrice)} √ó 8,8% = {formatCurrency(calculated.cbsDebit)}
          </p>
          <p className="ml-4">
            ‚Ä¢ D√©bito IBS (17,7% do pre√ßo): {formatCurrency(calculated.sellingPrice)} √ó 17,7% = {formatCurrency(calculated.ibsDebit)}
          </p>
        </div>

        <div>
          <p className="font-semibold mb-2">6. Imposto a Pagar (L√≠quido)</p>
          <p className="ml-4">
            (D√©bito CBS + D√©bito IBS) - (Cr√©dito CBS + Cr√©dito IBS)
          </p>
          <p className="ml-4">
            ({formatCurrency(calculated.cbsDebit)} + {formatCurrency(calculated.ibsDebit)}) - ({formatCurrency(calculated.cbsCredit)} + {formatCurrency(calculated.ibsCredit)})
          </p>
          <p className="ml-4 font-semibold text-destructive">
            = {formatCurrency(calculated.taxToPay)}
          </p>
        </div>

        <div className="border-t border-border pt-4 mt-4">
          <p className="font-semibold mb-2">Resumo da Opera√ß√£o</p>
          <p className="ml-4">
            ‚Ä¢ Custo de Compra: {formatCurrency(firstProduct.cost)}
          </p>
          <p className="ml-4">
            ‚Ä¢ Pre√ßo de Venda: {formatCurrency(calculated.sellingPrice)}
          </p>
          <p className="ml-4">
            ‚Ä¢ Margem Bruta: {formatCurrency(calculated.sellingPrice - firstProduct.cost)}
          </p>
          <p className="ml-4">
            ‚Ä¢ Impostos L√≠quidos: {formatCurrency(calculated.taxToPay)}
          </p>
          <p className="ml-4 font-semibold text-success">
            ‚Ä¢ Lucro Unit√°rio: {formatCurrency(calculated.sellingPrice - firstProduct.cost - calculated.taxToPay)}
          </p>
        </div>
      </div>

      <div className="rounded-lg bg-primary/5 p-4 text-sm">
        <p className="font-semibold mb-2">üìã Base Legal: Lei Complementar 214/2025</p>
        <p className="text-muted-foreground">
          Os c√°lculos seguem as regras da Reforma Tribut√°ria brasileira, considerando o sistema n√£o-cumulativo
          de IBS e CBS, onde os cr√©ditos da compra s√£o compensados com os d√©bitos da venda.
        </p>
      </div>
    </div>
  );
};
